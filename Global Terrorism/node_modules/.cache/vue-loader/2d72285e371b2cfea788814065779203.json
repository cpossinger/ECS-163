{"remainingRequest":"/home/cam/Documents/ECS 163/Homework 4/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cam/Documents/ECS 163/Homework 4/src/components/View2.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/cam/Documents/ECS 163/Homework 4/src/components/View2.vue","mtime":1612373011709},{"path":"/home/cam/Documents/ECS 163/Homework 4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cam/Documents/ECS 163/Homework 4/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/cam/Documents/ECS 163/Homework 4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cam/Documents/ECS 163/Homework 4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIGQzIGZyb20gImQzIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJCYXJDaGFydCIsIC8vIEZlZWwgZnJlZSB0byByZW5hbWUgdGhpcyBhbmQgdGhlIGZpbGUKICBwcm9wczogewogICAgY2hhcnRJZDogewogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgdHlwZTogU3RyaW5nLAogICAgfSwKICAgIHRpdGxlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgIH0sCiAgICBkYXRhc2V0OiB7CiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICB0eXBlOiBBcnJheSwKICAgIH0sCiAgICBhdHRyaWJYOiB7CiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICB0eXBlOiBTdHJpbmcsCiAgICB9LAogICAgbGFiZWxYOiB7CiAgICAgIHR5cGU6IFN0cmluZwogICAgfSwKICAgIGF0dHJpYlk6IHsKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgIHR5cGU6IFN0cmluZywKICAgIH0sCiAgICBsYWJlbFk6IHsKICAgICAgdHlwZTogU3RyaW5nCiAgICB9LAogICAgaGVpZ2h0OiB7CiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICB0eXBlOiBOdW1iZXIsCiAgICB9LAogICAgd2lkdGg6IHsKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgIHR5cGU6IE51bWJlciwKICAgIH0sCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgeDogbnVsbCwKICAgICAgeTogbnVsbCwKICAgICAgbWFyZ2luOiB7CiAgICAgICAgbGVmdDogNzUsCiAgICAgICAgdG9wOiA1MCwKICAgICAgICByaWdodDogMjAsCiAgICAgICAgYm90dG9tOiA1MCwKICAgICAgfQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBkYXRhc2V0KCkgewogICAgICB0aGlzLnVwZGF0ZSgpOwogICAgfSwKICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmluaXQoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXQoKSB7CiAgICAgIGNvbnNvbGUubG9nKGQzKTsgLy8gVGhpcyBjYW4gYmUgc2F2ZWx5IHJlbW92ZWQKICAgICAgLy8gVGhpcyB3aWxsIGJlIGNhbGxlZCB3aGVuIHRoZSBwYWdlIGxvYWRzLgogICAgICAvLyBZb3UgY2FuIGxvYWQgeW91ciBkYXRhIGFuZCBzZXR1cCBEMyBoZXJlCiAgICAgIHRoaXMueCA9IGQzLnNjYWxlQmFuZCgpOwogICAgICB0aGlzLnkgPSBkMy5zY2FsZUxpbmVhcigpOwogICAgICB0aGlzLnVwZGF0ZSgpOwogICAgfSwKICAgIHVwZGF0ZSgpIHsKICAgICAgdGhpcy54CiAgICAgICAgICAuZG9tYWluKGQzLm1hcCh0aGlzLmRhdGFzZXQsIChkKSA9PiBkW3RoaXMuYXR0cmliWF0pKQogICAgICAgICAgLnJhbmdlKFswLCB0aGlzLndpZHRoXSkKICAgICAgICAgIC5wYWRkaW5nKDAuMik7CiAgICAgIHRoaXMueQogICAgICAgICAgLmRvbWFpbihbMCwgZDMubWF4KHRoaXMuZGF0YXNldCwgKGQpID0+IGRbdGhpcy5hdHRyaWJZXSldKQogICAgICAgICAgLm5pY2UoKQogICAgICAgICAgLnJhbmdlKFt0aGlzLmhlaWdodCwgMF0pOwogICAgICBjb25zb2xlLmxvZyh0aGlzLmF0dHJpYlkpOwogICAgICBjb25zb2xlLmxvZyhkMy5tYXgodGhpcy5kYXRhc2V0LCAoZCkgPT4gZFt0aGlzLmF0dHJpYlldKSk7CiAgICAgIHRoaXMucmVuZGVyQmFycygpOwogICAgICB0aGlzLnJlbmRlclhBeGlzKCk7CiAgICAgIHRoaXMucmVuZGVyWUF4aXMoKTsKICAgIH0sCiAgICByZW5kZXJCYXJzKCkgewogICAgICBkMy5zZWxlY3QoYC5iYXJjaGFydC1zdmctJHt0aGlzLmNoYXJ0SWR9YCkKICAgICAgICAgIC5zZWxlY3QoIi5wbG90IikKICAgICAgICAgIC5zZWxlY3RBbGwoInJlY3QiKQogICAgICAgICAgLmRhdGEodGhpcy5kYXRhc2V0KQogICAgICAgICAgLmpvaW4oInJlY3QiKQogICAgICAgICAgLnRyYW5zaXRpb24oKQogICAgICAgICAgLmR1cmF0aW9uKDIwMCkKICAgICAgICAgIC5hdHRyKCJ4IiwgKGQpID0+IHRoaXMueChkW3RoaXMuYXR0cmliWF0pKQogICAgICAgICAgLmF0dHIoInkiLCAoZCkgPT4gdGhpcy55KGRbdGhpcy5hdHRyaWJZXSkpCiAgICAgICAgICAuYXR0cigid2lkdGgiLCB0aGlzLnguYmFuZHdpZHRoKCkpCiAgICAgICAgICAuYXR0cigiaGVpZ2h0IiwgKGQpID0+IHRoaXMueSgwKSAtIHRoaXMueShkW3RoaXMuYXR0cmliWV0pKTsKICAgIH0sCiAgICByZW5kZXJYQXhpcygpIHsKICAgICAgbGV0IHhBeGlzID0gZDMuYXhpc0JvdHRvbSh0aGlzLngpOwogICAgICBkMy5zZWxlY3QoYC5iYXJjaGFydC1zdmctJHt0aGlzLmNoYXJ0SWR9YCkuc2VsZWN0KCIueC1heGlzIikuY2FsbCh4QXhpcyk7CiAgICB9LAogICAgcmVuZGVyWUF4aXMoKSB7CiAgICAgIGxldCB5QXhpcyA9IGQzLmF4aXNMZWZ0KHRoaXMueSk7CiAgICAgIGQzLnNlbGVjdChgLmJhcmNoYXJ0LXN2Zy0ke3RoaXMuY2hhcnRJZH1gKS5zZWxlY3QoIi55LWF4aXMiKS5jYWxsKHlBeGlzKTsKICAgIH0sCiAgfSwKICBjb21wdXRlZDogewogICAgdmlld0JveCgpIHsKICAgICAgcmV0dXJuIGAwIDAgJHt0aGlzLndpZHRoICsgdGhpcy5tYXJnaW4ubGVmdCArIHRoaXMubWFyZ2luLnJpZ2h0fSAkewogICAgICAgICAgdGhpcy5oZWlnaHQgKyB0aGlzLm1hcmdpbi50b3AgKyB0aGlzLm1hcmdpbi5ib3R0b20KICAgICAgfWA7CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["View2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"View2.vue","sourceRoot":"src/components","sourcesContent":["<!-- Your HTML goes here -->\n<template>\n  <div>\n    <h1>{{ this.title }}</h1>\n    <svg :class=\"`barchart-svg-${chartId}`\" :viewBox=\"viewBox\">\n      <!-- Chart and Axes -->\n      <g :transform=\"`translate(${margin.left}, ${margin.top})`\">\n        <g class=\"plot\"></g>\n        <g class=\"x-axis\" :transform=\"`translate(0, ${height})`\"></g>\n        <g class=\"y-axis\"></g>\n      </g>\n\n      <!-- Axis Labels -->\n      <g :transform=\"`translate(${margin.left + width / 2}, ${margin.top + margin.bottom + height})`\">\n        <text>{{ labelX }}</text>\n      </g>\n      <g :transform=\"`translate(${margin.left / 4}, ${margin.top + height / 2}) rotate(-90)`\">\n        <text>{{ labelY }}</text>\n      </g>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nexport default {\n  name: \"BarChart\", // Feel free to rename this and the file\n  props: {\n    chartId: {\n      required: true,\n      type: String,\n    },\n    title: {\n      type: String,\n    },\n    dataset: {\n      required: true,\n      type: Array,\n    },\n    attribX: {\n      required: true,\n      type: String,\n    },\n    labelX: {\n      type: String\n    },\n    attribY: {\n      required: true,\n      type: String,\n    },\n    labelY: {\n      type: String\n    },\n    height: {\n      required: true,\n      type: Number,\n    },\n    width: {\n      required: true,\n      type: Number,\n    },\n  },\n  data() {\n    return {\n      x: null,\n      y: null,\n      margin: {\n        left: 75,\n        top: 50,\n        right: 20,\n        bottom: 50,\n      }\n    };\n  },\n  watch: {\n    dataset() {\n      this.update();\n    },\n  },\n  mounted() {\n    this.init();\n  },\n  methods: {\n    init() {\n      console.log(d3); // This can be savely removed\n      // This will be called when the page loads.\n      // You can load your data and setup D3 here\n      this.x = d3.scaleBand();\n      this.y = d3.scaleLinear();\n      this.update();\n    },\n    update() {\n      this.x\n          .domain(d3.map(this.dataset, (d) => d[this.attribX]))\n          .range([0, this.width])\n          .padding(0.2);\n      this.y\n          .domain([0, d3.max(this.dataset, (d) => d[this.attribY])])\n          .nice()\n          .range([this.height, 0]);\n      console.log(this.attribY);\n      console.log(d3.max(this.dataset, (d) => d[this.attribY]));\n      this.renderBars();\n      this.renderXAxis();\n      this.renderYAxis();\n    },\n    renderBars() {\n      d3.select(`.barchart-svg-${this.chartId}`)\n          .select(\".plot\")\n          .selectAll(\"rect\")\n          .data(this.dataset)\n          .join(\"rect\")\n          .transition()\n          .duration(200)\n          .attr(\"x\", (d) => this.x(d[this.attribX]))\n          .attr(\"y\", (d) => this.y(d[this.attribY]))\n          .attr(\"width\", this.x.bandwidth())\n          .attr(\"height\", (d) => this.y(0) - this.y(d[this.attribY]));\n    },\n    renderXAxis() {\n      let xAxis = d3.axisBottom(this.x);\n      d3.select(`.barchart-svg-${this.chartId}`).select(\".x-axis\").call(xAxis);\n    },\n    renderYAxis() {\n      let yAxis = d3.axisLeft(this.y);\n      d3.select(`.barchart-svg-${this.chartId}`).select(\".y-axis\").call(yAxis);\n    },\n  },\n  computed: {\n    viewBox() {\n      return `0 0 ${this.width + this.margin.left + this.margin.right} ${\n          this.height + this.margin.top + this.margin.bottom\n      }`;\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n.plot rect {\n  fill: #eeb27b;\n}\n</style>\n"]}]}