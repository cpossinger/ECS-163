{"remainingRequest":"/home/cam/Documents/ECS 163/Homework 4/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cam/Documents/ECS 163/Homework 4/src/components/View1.vue?vue&type=style&index=0&id=e325dfa8&scoped=true&lang=css&","dependencies":[{"path":"/home/cam/Documents/ECS 163/Homework 4/src/components/View1.vue","mtime":1612368590881},{"path":"/home/cam/Documents/ECS 163/Homework 4/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cam/Documents/ECS 163/Homework 4/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/cam/Documents/ECS 163/Homework 4/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/cam/Documents/ECS 163/Homework 4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cam/Documents/ECS 163/Homework 4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojbWFwQ29udGFpbmVyIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiAwOwogIGJvdHRvbTogMDsKICB3aWR0aDogMTAwJTsKfQo="},{"version":3,"sources":["View1.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsIA;AACA;AACA;AACA;AACA;AACA","file":"View1.vue","sourceRoot":"src/components","sourcesContent":["<!-- Your HTML goes here -->\n<template>\n  <div>\n    <select  v-model=\"selected\" @change=\"dynFilter\">\n      <option value=\"\">All Years</option>\n      <option v-for=\"option in options\" v-bind:key=\"option\" v-bind:value=\"option\">\n        {{ option }}\n      </option>\n    </select>\n    <span>Selected: {{ selected }}</span>\n\n  <div id=\"mapContainer\" class = \"darkmap\" ></div>\n  </div>\n</template>\n\n<script>\nimport mapboxgl from \"mapbox-gl\"\nimport * as d3 from \"d3\";\n\nexport default {\n  name: \"DarkMap\",\n  props: {\n    dataset: {\n      required: true,\n      type: Array\n    }\n  },\n  data() {\n    return {\n      accessToken: \"pk.eyJ1IjoiY3Bvc3NpbmdlciIsImEiOiJja2tqMHV5bjExNHIzMnVudzc1bzJ4dWhoIn0.53g3xS17ONQ80xyG80Fzpw\",\n      map: null,\n      container: null,\n      svg: null,\n      dots: null,\n      filtered_dataset: this.dataset,\n      selected: \"2010\",\n      options: [...new Set(this.dataset.map(item => item.iyear))],\n      element: null,\n    };\n  },\n  mounted() {\n   this.init();\n  },\n  methods: {\n    init(){\n      mapboxgl.accessToken = this.accessToken;\n\n      this.map = new mapboxgl.Map({\n        container: \"mapContainer\",\n        style: \"mapbox://styles/cpossinger/ckkj3k7491coo17rx6ey9ga67\",\n        zoom: 2,\n      });\n\n      this.map.on(\"viewreset\", () => {this.render()});\n      this.map.on(\"move\", () => {this.render()});\n      this.map.on(\"moveend\", () => {this.render()});\n\n      /*\n      d3.selectAll(\".mapboxgl-canvas\")\n      .style(\"opacity\", 1)\n      .style(\"position\",\"absolute\")\n      .style(\"z-index\",1)\n       */\n\n      this.container = this.map.getCanvasContainer();\n\n      this.svg = d3\n      .select(this.container)\n      .append(\"svg\")\n      .attr(\"width\",\"100%\")\n      .attr(\"height\",\"800\")\n      .style(\"position\",\"absolute\")\n      .style(\"z-index\",10);\n\n      this.dots = this.svg\n      .selectAll(\"circle\")\n      .data(this.filtered_dataset)\n      .enter()\n      .append(\"circle\")\n      .attr(\"r\", d => d.nkill / 15)\n      .style(\"opacity\",0.7)\n      .style(\"fill\",\"#ff3636\")\n          .attr(\"transform\", function(d) {return \"translate(\" + projection([d.longitude,d.latitude]) + \")\";});\n\n\n      console.log(this.dataset);\n\n      this.render();\n    },\n\n    projection: {\n      d3.geo.mercator();\n    },\n\n    project: function (d) {\n      console.log(\"projection\");\n      var self = this;\n      var map = self.map;\n      console.log(d);\n      return map.project(new mapboxgl.LngLat(d.longitude, d.latitude));\n    },\n\n    render() {\n      var self = this;\n\n          console.log(\"Rendered\");\n      this.dots\n      .attr(\"cx\",function (d){\n        return self.project(d).x;\n      })\n      .attr(\"cy\",function (d){\n        return self.project(d).y;\n      });\n\n    },\n    dynFilter() {\n      console.log(\"filtered\");\n      if(this.selected === \"\"){\n        this.filtered_dataset = this.dataset;\n      }\n      else{\n        var self = this;\n        this.filtered_dataset = this.dataset.filter(function (d){ return d.iyear === self.selected});\n      }\n      this.init();\n    }\n\n  },\n\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n#mapContainer {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  width: 100%;\n}\n</style>"]}]}