{"remainingRequest":"/home/cam/Documents/ECS 163/Homework 4/node_modules/babel-loader/lib/index.js!/home/cam/Documents/ECS 163/Homework 4/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cam/Documents/ECS 163/Homework 4/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cam/Documents/ECS 163/Homework 4/src/components/View2.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/cam/Documents/ECS 163/Homework 4/src/components/View2.vue","mtime":1612373011709},{"path":"/home/cam/Documents/ECS 163/Homework 4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cam/Documents/ECS 163/Homework 4/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/cam/Documents/ECS 163/Homework 4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cam/Documents/ECS 163/Homework 4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCAqIGFzIGQzIGZyb20gImQzIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJCYXJDaGFydCIsCiAgLy8gRmVlbCBmcmVlIHRvIHJlbmFtZSB0aGlzIGFuZCB0aGUgZmlsZQogIHByb3BzOiB7CiAgICBjaGFydElkOiB7CiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICB0eXBlOiBTdHJpbmcKICAgIH0sCiAgICB0aXRsZTogewogICAgICB0eXBlOiBTdHJpbmcKICAgIH0sCiAgICBkYXRhc2V0OiB7CiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICB0eXBlOiBBcnJheQogICAgfSwKICAgIGF0dHJpYlg6IHsKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgIHR5cGU6IFN0cmluZwogICAgfSwKICAgIGxhYmVsWDogewogICAgICB0eXBlOiBTdHJpbmcKICAgIH0sCiAgICBhdHRyaWJZOiB7CiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICB0eXBlOiBTdHJpbmcKICAgIH0sCiAgICBsYWJlbFk6IHsKICAgICAgdHlwZTogU3RyaW5nCiAgICB9LAogICAgaGVpZ2h0OiB7CiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICB0eXBlOiBOdW1iZXIKICAgIH0sCiAgICB3aWR0aDogewogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgdHlwZTogTnVtYmVyCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgeDogbnVsbCwKICAgICAgeTogbnVsbCwKICAgICAgbWFyZ2luOiB7CiAgICAgICAgbGVmdDogNzUsCiAgICAgICAgdG9wOiA1MCwKICAgICAgICByaWdodDogMjAsCiAgICAgICAgYm90dG9tOiA1MAogICAgICB9CiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIGRhdGFzZXQ6IGZ1bmN0aW9uIGRhdGFzZXQoKSB7CiAgICAgIHRoaXMudXBkYXRlKCk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5pbml0KCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0OiBmdW5jdGlvbiBpbml0KCkgewogICAgICBjb25zb2xlLmxvZyhkMyk7IC8vIFRoaXMgY2FuIGJlIHNhdmVseSByZW1vdmVkCiAgICAgIC8vIFRoaXMgd2lsbCBiZSBjYWxsZWQgd2hlbiB0aGUgcGFnZSBsb2Fkcy4KICAgICAgLy8gWW91IGNhbiBsb2FkIHlvdXIgZGF0YSBhbmQgc2V0dXAgRDMgaGVyZQoKICAgICAgdGhpcy54ID0gZDMuc2NhbGVCYW5kKCk7CiAgICAgIHRoaXMueSA9IGQzLnNjYWxlTGluZWFyKCk7CiAgICAgIHRoaXMudXBkYXRlKCk7CiAgICB9LAogICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLnguZG9tYWluKGQzLm1hcCh0aGlzLmRhdGFzZXQsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGRbX3RoaXMuYXR0cmliWF07CiAgICAgIH0pKS5yYW5nZShbMCwgdGhpcy53aWR0aF0pLnBhZGRpbmcoMC4yKTsKICAgICAgdGhpcy55LmRvbWFpbihbMCwgZDMubWF4KHRoaXMuZGF0YXNldCwgZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZFtfdGhpcy5hdHRyaWJZXTsKICAgICAgfSldKS5uaWNlKCkucmFuZ2UoW3RoaXMuaGVpZ2h0LCAwXSk7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuYXR0cmliWSk7CiAgICAgIGNvbnNvbGUubG9nKGQzLm1heCh0aGlzLmRhdGFzZXQsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGRbX3RoaXMuYXR0cmliWV07CiAgICAgIH0pKTsKICAgICAgdGhpcy5yZW5kZXJCYXJzKCk7CiAgICAgIHRoaXMucmVuZGVyWEF4aXMoKTsKICAgICAgdGhpcy5yZW5kZXJZQXhpcygpOwogICAgfSwKICAgIHJlbmRlckJhcnM6IGZ1bmN0aW9uIHJlbmRlckJhcnMoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgZDMuc2VsZWN0KCIuYmFyY2hhcnQtc3ZnLSIuY29uY2F0KHRoaXMuY2hhcnRJZCkpLnNlbGVjdCgiLnBsb3QiKS5zZWxlY3RBbGwoInJlY3QiKS5kYXRhKHRoaXMuZGF0YXNldCkuam9pbigicmVjdCIpLnRyYW5zaXRpb24oKS5kdXJhdGlvbigyMDApLmF0dHIoIngiLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBfdGhpczIueChkW190aGlzMi5hdHRyaWJYXSk7CiAgICAgIH0pLmF0dHIoInkiLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBfdGhpczIueShkW190aGlzMi5hdHRyaWJZXSk7CiAgICAgIH0pLmF0dHIoIndpZHRoIiwgdGhpcy54LmJhbmR3aWR0aCgpKS5hdHRyKCJoZWlnaHQiLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBfdGhpczIueSgwKSAtIF90aGlzMi55KGRbX3RoaXMyLmF0dHJpYlldKTsKICAgICAgfSk7CiAgICB9LAogICAgcmVuZGVyWEF4aXM6IGZ1bmN0aW9uIHJlbmRlclhBeGlzKCkgewogICAgICB2YXIgeEF4aXMgPSBkMy5heGlzQm90dG9tKHRoaXMueCk7CiAgICAgIGQzLnNlbGVjdCgiLmJhcmNoYXJ0LXN2Zy0iLmNvbmNhdCh0aGlzLmNoYXJ0SWQpKS5zZWxlY3QoIi54LWF4aXMiKS5jYWxsKHhBeGlzKTsKICAgIH0sCiAgICByZW5kZXJZQXhpczogZnVuY3Rpb24gcmVuZGVyWUF4aXMoKSB7CiAgICAgIHZhciB5QXhpcyA9IGQzLmF4aXNMZWZ0KHRoaXMueSk7CiAgICAgIGQzLnNlbGVjdCgiLmJhcmNoYXJ0LXN2Zy0iLmNvbmNhdCh0aGlzLmNoYXJ0SWQpKS5zZWxlY3QoIi55LWF4aXMiKS5jYWxsKHlBeGlzKTsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICB2aWV3Qm94OiBmdW5jdGlvbiB2aWV3Qm94KCkgewogICAgICByZXR1cm4gIjAgMCAiLmNvbmNhdCh0aGlzLndpZHRoICsgdGhpcy5tYXJnaW4ubGVmdCArIHRoaXMubWFyZ2luLnJpZ2h0LCAiICIpLmNvbmNhdCh0aGlzLmhlaWdodCArIHRoaXMubWFyZ2luLnRvcCArIHRoaXMubWFyZ2luLmJvdHRvbSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["View2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,OAAA,KAAA,EAAA,MAAA,IAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AACA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA;AAFA,KADA;AAKA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KALA;AAQA,IAAA,OAAA,EAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA;AAFA,KARA;AAYA,IAAA,OAAA,EAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAZA;AAgBA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAhBA;AAmBA,IAAA,OAAA,EAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAnBA;AAuBA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAvBA;AA0BA,IAAA,MAAA,EAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA;AAFA,KA1BA;AA8BA,IAAA,KAAA,EAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA;AAFA;AA9BA,GAFA;AAqCA,EAAA,IArCA,kBAqCA;AACA,WAAA;AACA,MAAA,CAAA,EAAA,IADA;AAEA,MAAA,CAAA,EAAA,IAFA;AAGA,MAAA,MAAA,EAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,GAAA,EAAA,EAFA;AAGA,QAAA,KAAA,EAAA,EAHA;AAIA,QAAA,MAAA,EAAA;AAJA;AAHA,KAAA;AAUA,GAhDA;AAiDA,EAAA,KAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,WAAA,MAAA;AACA;AAHA,GAjDA;AAsDA,EAAA,OAtDA,qBAsDA;AACA,SAAA,IAAA;AACA,GAxDA;AAyDA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,EAAA,EADA,CACA;AACA;AACA;;AACA,WAAA,CAAA,GAAA,EAAA,CAAA,SAAA,EAAA;AACA,WAAA,CAAA,GAAA,EAAA,CAAA,WAAA,EAAA;AACA,WAAA,MAAA;AACA,KARA;AASA,IAAA,MATA,oBASA;AAAA;;AACA,WAAA,CAAA,CACA,MADA,CACA,EAAA,CAAA,GAAA,CAAA,KAAA,OAAA,EAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,KAAA,CAAA,OAAA,CAAA;AAAA,OAAA,CADA,EAEA,KAFA,CAEA,CAAA,CAAA,EAAA,KAAA,KAAA,CAFA,EAGA,OAHA,CAGA,GAHA;AAIA,WAAA,CAAA,CACA,MADA,CACA,CAAA,CAAA,EAAA,EAAA,CAAA,GAAA,CAAA,KAAA,OAAA,EAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,KAAA,CAAA,OAAA,CAAA;AAAA,OAAA,CAAA,CADA,EAEA,IAFA,GAGA,KAHA,CAGA,CAAA,KAAA,MAAA,EAAA,CAAA,CAHA;AAIA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,OAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,KAAA,OAAA,EAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,KAAA,CAAA,OAAA,CAAA;AAAA,OAAA,CAAA;AACA,WAAA,UAAA;AACA,WAAA,WAAA;AACA,WAAA,WAAA;AACA,KAvBA;AAwBA,IAAA,UAxBA,wBAwBA;AAAA;;AACA,MAAA,EAAA,CAAA,MAAA,yBAAA,KAAA,OAAA,GACA,MADA,CACA,OADA,EAEA,SAFA,CAEA,MAFA,EAGA,IAHA,CAGA,KAAA,OAHA,EAIA,IAJA,CAIA,MAJA,EAKA,UALA,GAMA,QANA,CAMA,GANA,EAOA,IAPA,CAOA,GAPA,EAOA,UAAA,CAAA;AAAA,eAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,OAAA,CAAA,CAAA;AAAA,OAPA,EAQA,IARA,CAQA,GARA,EAQA,UAAA,CAAA;AAAA,eAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,OAAA,CAAA,CAAA;AAAA,OARA,EASA,IATA,CASA,OATA,EASA,KAAA,CAAA,CAAA,SAAA,EATA,EAUA,IAVA,CAUA,QAVA,EAUA,UAAA,CAAA;AAAA,eAAA,MAAA,CAAA,CAAA,CAAA,CAAA,IAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,OAAA,CAAA,CAAA;AAAA,OAVA;AAWA,KApCA;AAqCA,IAAA,WArCA,yBAqCA;AACA,UAAA,KAAA,GAAA,EAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA;AACA,MAAA,EAAA,CAAA,MAAA,yBAAA,KAAA,OAAA,GAAA,MAAA,CAAA,SAAA,EAAA,IAAA,CAAA,KAAA;AACA,KAxCA;AAyCA,IAAA,WAzCA,yBAyCA;AACA,UAAA,KAAA,GAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,CAAA;AACA,MAAA,EAAA,CAAA,MAAA,yBAAA,KAAA,OAAA,GAAA,MAAA,CAAA,SAAA,EAAA,IAAA,CAAA,KAAA;AACA;AA5CA,GAzDA;AAuGA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,2BAAA,KAAA,KAAA,GAAA,KAAA,MAAA,CAAA,IAAA,GAAA,KAAA,MAAA,CAAA,KAAA,cACA,KAAA,MAAA,GAAA,KAAA,MAAA,CAAA,GAAA,GAAA,KAAA,MAAA,CAAA,MADA;AAGA;AALA;AAvGA,CAAA","sourcesContent":["<!-- Your HTML goes here -->\n<template>\n  <div>\n    <h1>{{ this.title }}</h1>\n    <svg :class=\"`barchart-svg-${chartId}`\" :viewBox=\"viewBox\">\n      <!-- Chart and Axes -->\n      <g :transform=\"`translate(${margin.left}, ${margin.top})`\">\n        <g class=\"plot\"></g>\n        <g class=\"x-axis\" :transform=\"`translate(0, ${height})`\"></g>\n        <g class=\"y-axis\"></g>\n      </g>\n\n      <!-- Axis Labels -->\n      <g :transform=\"`translate(${margin.left + width / 2}, ${margin.top + margin.bottom + height})`\">\n        <text>{{ labelX }}</text>\n      </g>\n      <g :transform=\"`translate(${margin.left / 4}, ${margin.top + height / 2}) rotate(-90)`\">\n        <text>{{ labelY }}</text>\n      </g>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nexport default {\n  name: \"BarChart\", // Feel free to rename this and the file\n  props: {\n    chartId: {\n      required: true,\n      type: String,\n    },\n    title: {\n      type: String,\n    },\n    dataset: {\n      required: true,\n      type: Array,\n    },\n    attribX: {\n      required: true,\n      type: String,\n    },\n    labelX: {\n      type: String\n    },\n    attribY: {\n      required: true,\n      type: String,\n    },\n    labelY: {\n      type: String\n    },\n    height: {\n      required: true,\n      type: Number,\n    },\n    width: {\n      required: true,\n      type: Number,\n    },\n  },\n  data() {\n    return {\n      x: null,\n      y: null,\n      margin: {\n        left: 75,\n        top: 50,\n        right: 20,\n        bottom: 50,\n      }\n    };\n  },\n  watch: {\n    dataset() {\n      this.update();\n    },\n  },\n  mounted() {\n    this.init();\n  },\n  methods: {\n    init() {\n      console.log(d3); // This can be savely removed\n      // This will be called when the page loads.\n      // You can load your data and setup D3 here\n      this.x = d3.scaleBand();\n      this.y = d3.scaleLinear();\n      this.update();\n    },\n    update() {\n      this.x\n          .domain(d3.map(this.dataset, (d) => d[this.attribX]))\n          .range([0, this.width])\n          .padding(0.2);\n      this.y\n          .domain([0, d3.max(this.dataset, (d) => d[this.attribY])])\n          .nice()\n          .range([this.height, 0]);\n      console.log(this.attribY);\n      console.log(d3.max(this.dataset, (d) => d[this.attribY]));\n      this.renderBars();\n      this.renderXAxis();\n      this.renderYAxis();\n    },\n    renderBars() {\n      d3.select(`.barchart-svg-${this.chartId}`)\n          .select(\".plot\")\n          .selectAll(\"rect\")\n          .data(this.dataset)\n          .join(\"rect\")\n          .transition()\n          .duration(200)\n          .attr(\"x\", (d) => this.x(d[this.attribX]))\n          .attr(\"y\", (d) => this.y(d[this.attribY]))\n          .attr(\"width\", this.x.bandwidth())\n          .attr(\"height\", (d) => this.y(0) - this.y(d[this.attribY]));\n    },\n    renderXAxis() {\n      let xAxis = d3.axisBottom(this.x);\n      d3.select(`.barchart-svg-${this.chartId}`).select(\".x-axis\").call(xAxis);\n    },\n    renderYAxis() {\n      let yAxis = d3.axisLeft(this.y);\n      d3.select(`.barchart-svg-${this.chartId}`).select(\".y-axis\").call(yAxis);\n    },\n  },\n  computed: {\n    viewBox() {\n      return `0 0 ${this.width + this.margin.left + this.margin.right} ${\n          this.height + this.margin.top + this.margin.bottom\n      }`;\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n.plot rect {\n  fill: #eeb27b;\n}\n</style>\n"],"sourceRoot":"src/components"}]}